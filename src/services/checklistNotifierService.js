// src/services/checklistNotifierService.js
const {
  supabaseAdmin
} = require('../config/supabase');
const telegram = require('../utils/checklistTelegram');

// ===== Helper Functions =====

const getUserInfo = async (userId) => {
  if (!userId) return '<i>(‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô)</i>';
  const {
    data
  } = await supabaseAdmin.from('profiles').select('first_name, last_name, email').eq('id', userId).single();
  return data ? `<b>${data.first_name || ''} ${data.last_name || ''}</b> (<code>${data.email}</code>)` : `<code>${userId}</code>`;
};

const getSubmissionAndContestInfo = async (submissionId) => {
  if (!submissionId) return {
    fishName: 'N/A',
    contestName: null
  };
  const {
    data
  } = await supabaseAdmin
    .from('submissions')
    .select('fish_name, contest:contests(name)')
    .eq('id', submissionId)
    .single();
  return {
    fishName: data?.fish_name || 'N/A',
    contestName: data?.contest?.name || null,
  };
};

// ===== Service Class =====

class ChecklistNotifierService {

  async onUserSignUp(user) {
    const message = `‚úÖ <b>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà</b>\n<b>User:</b> ${user.email}\n<b>ID:</b> <code>${user.id}</code>`;
    await telegram.sendMessage(message);
  }

  async onUserSignIn(userId) {
    const userInfo = await getUserInfo(userId);
    const message = `‚û°Ô∏è <b>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</b>\n<b>User:</b> ${userInfo}`;
    await telegram.sendMessage(message);
  }

  async onContestCreated(contestId, managerId) {
    const managerInfo = await getUserInfo(managerId);
    const {
      data
    } = await supabaseAdmin.from('contests').select('name, category').eq('id', contestId).single();
    const message = `üÜï <b>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà</b>\n<b>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</b> ${data.category}\n<b>‡∏ä‡∏∑‡πà‡∏≠:</b> "${data.name}"\n<b>‡πÇ‡∏î‡∏¢:</b> ${managerInfo}`;
    await telegram.sendMessage(message);
  }

  async onUserSubmitForEvaluation(submissionId, userId) {
    const userInfo = await getUserInfo(userId);
    const {
      fishName
    } = await getSubmissionAndContestInfo(submissionId);
    const message = `üß™ <b>‡∏™‡πà‡∏á‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û</b>\n<b>‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î:</b> "${fishName}"\n<b>‡πÇ‡∏î‡∏¢:</b> ${userInfo}`;
    await telegram.sendMessage(message);
  }

  async onUserSubmitForCompetition(submissionId, userId) {
    const userInfo = await getUserInfo(userId);
    const {
      fishName,
      contestName
    } = await getSubmissionAndContestInfo(submissionId);
    const message = `üéØ <b>‡∏™‡πà‡∏á‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î</b>\n<b>‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î:</b> "${fishName}"\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${contestName}"\n<b>‡πÇ‡∏î‡∏¢:</b> ${userInfo}`;
    await telegram.sendMessage(message);
  }

  async onManagerApprove(submissionId, managerId) {
    const managerInfo = await getUserInfo(managerId);
    const {
      fishName,
      contestName
    } = await getSubmissionAndContestInfo(submissionId);
    const message = `üëç <b>‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</b>\n<b>‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î:</b> "${fishName}"\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${contestName}"\n<b>‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢:</b> ${managerInfo}`;
    await telegram.sendMessage(message);
  }

  async onManagerReject(submissionId, managerId, reason) {
    const managerInfo = await getUserInfo(managerId);
    const {
      fishName,
      contestName
    } = await getSubmissionAndContestInfo(submissionId);
    const reasonText = reason ? `\n<b>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</b> ${reason}` : '';
    const message = `üëé <b>‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</b>\n<b>‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î:</b> "${fishName}"\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${contestName}"\n<b>‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÇ‡∏î‡∏¢:</b> ${managerInfo}${reasonText}`;
    await telegram.sendMessage(message);
  }

  async onJudgeAssigned(contestId, judgeId) {
    const judgeInfo = await getUserInfo(judgeId);
    const {
      data
    } = await supabaseAdmin.from('contests').select('name').eq('id', contestId).single();
    const message = `üë®‚Äç‚öñÔ∏è <b>‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£</b>\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${data.name}"\n<b>‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£:</b> ${judgeInfo}`;
    await telegram.sendMessage(message);
  }

  async onJudgeAccept(contestId, judgeId) {
    const judgeInfo = await getUserInfo(judgeId);
    const {
      data
    } = await supabaseAdmin.from('contests').select('name').eq('id', contestId).single();
    const message = `‚úÖ <b>‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç</b>\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${data.name}"\n<b>‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£:</b> ${judgeInfo}`;
    await telegram.sendMessage(message);
  }

  async onJudgeScore(submissionId, judgeId) {
    const judgeInfo = await getUserInfo(judgeId);
    const {
      fishName,
      contestName
    } = await getSubmissionAndContestInfo(submissionId);
    const message = `üìù <b>‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</b>\n<b>‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î:</b> "${fishName}"\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${contestName}"\n<b>‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏î‡∏¢:</b> ${judgeInfo}`;
    await telegram.sendMessage(message);
  }

  async onContestFinalized(contestId) {
    const {
      data
    } = await supabaseAdmin.from('contests').select('name').eq('id', contestId).single();
    const message = `üèÜ <b>‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î</b>\n<b>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î:</b> "${data.name}" ‡πÑ‡∏î‡πâ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß`;
    await telegram.sendMessage(message);
  }
}

module.exports = new ChecklistNotifierService();